<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd
          http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--访问以下资源不需要权限-->

    <security:http security="none" pattern="/css/**" />
    <security:http security="none" pattern="/img/**" />
    <security:http security="none" pattern="/plugins/**" />
    <security:http security="none" pattern="/js/**" />
    <security:http security="none" pattern="favicon.ico"></security:http>
    <security:http pattern="/cart.html" security="none"></security:http>


    <!--entry-point-ref 入口点引用-->
    <security:http use-expressions="false" entry-point-ref="casProcessingFilterEntryPoint">
        <security:intercept-url pattern="/cart/*.do" access="IS_AUTHENTICATED_ANONYMOUSLY"></security:intercept-url>
        <!--拦截所有路径,通过需要有ROLE_USER权限才可以访问-->
       <security:intercept-url pattern="/**" access="ROLE_USER"/>
        <security:csrf disabled="true"/>
        <!-- custom-filter为过滤器， position 表示将过滤器放在指定的位置上，before表示放在指定位置之前  ，after表示放在指定的位置之后  -->
        <!--1 调用认证过滤器-->
        <security:custom-filter ref="casAuthenticationFilter" position="CAS_FILTER" />
        <!--2 调用登出过滤器:CAS提供-->
        <security:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
        <!--3 调用登出过滤器:spring框架提供,请求登出-->
        <security:custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
    </security:http>

    <!-- CAS入口点 开始 -->
    <bean id="casProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <!-- 单点登录服务器登录URL -->
        <property name="loginUrl" value="http://localhost:9100/cas/login"/>
        <property name="serviceProperties" ref="serviceProperties"/>
    </bean>
    <!--2 用户自身工程配置类-->
    <bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <!--service 配置自身工程的根地址+/login/cas   -->
        <property name="service" value="http://localhost:9107/login/cas"/>
    </bean>

    <!--解释: 第一个bean:认证过滤器找=====>第二个bean认证管理器=====>找第三个bean:认证提供者-->
    <!-- 认证过滤器 开始 -->
    <bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>
    <!-- 认证管理器 -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="casAuthenticationProvider">
        </security:authentication-provider>
    </security:authentication-manager>
    <!-- 认证提供者 -->
    <bean id="casAuthenticationProvider"  class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <!--1 认证类:spring框架提供-->
        <property name="authenticationUserDetailsService">
            <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <constructor-arg ref="userDetailsService" />
            </bean>
        </property>
        <property name="serviceProperties" ref="serviceProperties"/>
        <!-- ticketValidator 为票据验证器 -->
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" value="http://localhost:9100/cas"/>
            </bean>
        </property>
        <property name="key" value="an_id_for_this_auth_provider_only"/>
    </bean>

    <!-- 认证类 -->
    <bean id="userDetailsService" class="com.pinyougou.cart.service.UserDetailsServiceImpl"/>

    <!-- 认证过滤器 结束 -->


    <!-- 单点登出  开始  -->
    <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
    <bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="http://localhost:9100/cas/logout?service=http://localhost:9103/index.html"/>
        <constructor-arg>
            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/logout/cas"/>
    </bean>
    <!-- 单点登出  结束 -->

</beans>